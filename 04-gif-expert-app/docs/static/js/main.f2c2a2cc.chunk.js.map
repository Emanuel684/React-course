{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","props","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAwCeA,EArCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OACI,sBAAMC,SAfW,SAACC,GAClBA,EAAEC,iBAEFC,QAAQC,IAAI,gBAERN,EAAWO,OAAOC,OAAS,GAC3BV,GAAc,SAAAK,GAAC,OAAMH,GAAN,mBAAqBG,OACpCF,EAAc,KAEdI,QAAQC,IAAI,sBAMhB,SACI,uBACIG,KAAK,OACLC,MAAOV,EACPW,SAvBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAMIA,EAAKC,OANT,uBAMXC,EANW,EAMXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAgBZM,GAhBY,4CAAH,sDCeLO,EAbK,SAAEC,GAIlB,OAFAzB,QAAQC,IAAIwB,GAGR,sBAAKC,UAAU,yCAAf,UACG,qBAAKC,IAAMF,EAAMd,IAAMiB,IAAMH,EAAMJ,QACnC,kCAAMI,EAAMJ,MAAZ,WCqCIQ,EAzCC,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAEf,ECHwB,SAACA,GAEzB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAlBAC,qBAAU,WACNzB,EAAQC,GACHyB,MAAK,SAAAC,GAQFH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAItB,CAACrB,IAEGsB,EDtB2BK,CAAa3B,GAAjCa,EAAd,EAAQN,KAAcc,EAAtB,EAAsBA,QAOtB,OALA9B,QAAQC,IAAI6B,GACZ9B,QAAQC,IAAIqB,GAKR,qCACI,oBAAII,UAAU,oCAAd,SAAoDjB,IAalDqB,GAAW,mBAAGJ,UAAU,mCAAb,wBACb,qBAAKA,UAAU,YAAf,SAEQJ,EAAOJ,KAAI,SAAAC,GACP,OACI,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEH1BiB,EA3BM,WAEjB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ6C,EAAWpB,KAAI,SAAAT,GAAQ,OAEnB,aADA,CACC,EAAD,CAEIA,SAAUA,GADLA,YCdjC8B,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f2c2a2cc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        console.log('Submit hecho')\n\n        if (inputValue.trim().length > 2) {\n            setCategories(e => [ inputValue, ...e ]);\n            setInputValue('');\n        } else {\n            console.log(\"inputValue vacido\");\n        }\n\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;","export const getGifs = async ( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=VBgswINHv9vM76LeKiJlxdNaqCqu9Qv8`;\n\n    const resp = await fetch(url);\n\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n\n    // setImages(gifs);\n\n};","import React from 'react'\n\nconst GifGridItem = ( props ) => {\n\n    console.log(props)\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n           <img src={ props.url } alt={ props.title } />\n           <p> { props.title } </p>\n        </div>\n    )\n}\n\n\nexport default GifGridItem;","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n\n    const { data: images, loading } = useFetchGifs(category);\n\n    console.log(loading);\n    console.log(images);\n\n\n\n    return (\n        <>\n            <h3 className='animate__animated animate__fadeIn' >{category}</h3>\n            {/* {loading ? 'Cargando...' : <div className=\"card-grid\">\n                {\n                    images.map(img => {\n                        return (\n                            <GifGridItem\n                                key={img.id}\n                                {...img}\n                            />\n                        )\n                    })\n                }\n            </div>} */}\n            { loading && <p className='animate__animated animate__flash' >Loading...</p> }\n            <div className=\"card-grid\">\n                {\n                    images.map(img => {\n                        return (\n                            <GifGridItem\n                                key={img.id}\n                                {...img}\n                            />\n                        )\n                    })\n                }\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid;\n","import { useState, useEffect } from 'react';\n\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category)\n            .then(imgs => {\n                // setTimeout(() => {\n                //     setstate({\n                //         data: imgs,\n                //         loading: false\n                //     })\n                // }, 3000)\n\n                setstate({\n                    data: imgs,\n                    loading: false\n                })\n\n            });\n    }, [category]);\n\n    return state; // { data: [], loading: true };\n\n}\n\n","import React, { useState } from 'react';\n\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Piace'])\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n\n            <ol>\n                {\n                    categories.map(category => (\n                        // <li key={category} >{category}</li>\n                        <GifGrid\n                            key={category}\n                            category={category}\n                        />\n                    ))\n                }\n            </ol>\n\n        </>\n    )\n\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <>\n    <GifExpertApp />\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}